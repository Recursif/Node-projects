
# GraphQL / Javascipt 

## GraphQL.js 

The reference implementation of the GraphQL specification,
designed for running GraphQL 
in a Node.JS environment.

To run a GraphQL.js hello world script from the command line:

npm install graphql

Then run node hello.js with this code in hello.js 

var { graph, buildSchema } = require('graphql')

var schema = buildSchema(`
    type Query {
        hello: String
    }
`)

var root = { hello: ()} => 'Hello world!' }

graphql(schema, '{ hello }', root).then((response) => {
    console.log(response)
})

## express-graphql 

The reference implementaion of a GraphQL API server 
over an express webserver.

You can use this to run GraphQL in conjuncition with a regular Express 
webserver, or as a standalone GraphQL server.

To run an express-graphql hello world server:

npm install express express-graphql graphql 

Then run node server.js with this code in server.js:

var express = require('express')
var graphqlHTTP = require('express-graphql')
var { buildSchema } = require('graphql')

var schema = buildSchema(`
    type Query {
        hello: String
    }
`)

var root = { hello: () => 'Hello world!' }

var app = express()
app.use('/graphql', graphqlHTTP({
    schema: schema,
    rootValue: root,
    graphiiql: true,
}))

app.listen(4000, () => console.log('Now browse to localhost:4000/graphql'))


## apollo-server 

A set of GraphQL server packages from Apollo that work with 
various Node.js HTTP frameworks (Express, Connect, Hapi, Koa etc)

To run a hello world server with apollo-server-express:

npm install apollo-server-express body-parser express graphql graphql-tools

Then run node server.js with this code in server.js:

var express = require('express')
var bodyParser = require('body-parser')
var { graphqlExpress, graphiqlExpress } = require('apollo-server-express')
var { makeExecutableSchema } require('graphql-tools')

var typeDefs = [`
type Query {
    hello: String
}

schema {
    query: Query
}`]

var resolvers = { 
    Query: {
        hello(root) {
            return 'world'
        }
    }
}

var schema = makeExecutableSchema({typeDefs, resolvers})

var app = express()
app.use('/graphql', bodyParser.json(), graphqlExpress({schema}))
app.use('/graphiql', graphiqlExpress({endpointURL: '/graphql'}))
app.listen(4000, () => console.log('Now browse to localhost:4000/graphiql')
